import Layout from '@/components/Layout'
import Head from 'next/head'
import Image from 'next/image'
import Link from 'next/link'
import AnimatedText from '@/components/AnimatedText'
import HireMe from '@/components/HireMe'
import lightbuble from '@/public/miscellaneous_icons_1.svg'
import { Montserrat } from 'next/font/google'
import Experience from '@/components/Experience'
import Messenger from '@/components/Messenger'
import FotoProfil from '@/public/developer-pic-1.png' 
import Description from '@/components/Description'
import { useState } from 'react'
import { motion } from 'framer-motion';
import Skills from '@/components/Skills'
import useThemeSwitcher from '@/components/hook/useThemeSwitcher'
import Competences from '@/components/Competences'
import Modal from '@/components/Modal'
import Project from '@/components/Project'
import ExampleSentences from '@/components/ExampleSentences'



export default function Home() {
    const [showProject, setshowProject] = useState(false);
    const [showExperience, setShowExperience] = useState(false);
    const [showSkills, setShowSkills] = useState(false);
    const [showDescription, setshowDescription] = useState(true);
    const [mode,setMode] = useThemeSwitcher() as [string, (mode: string) => void];
    const [modal, setModal] = useState({ active: false, index: 0 });
    const [selectedExample, setSelectedExample] = useState('');
    const [exampleSentencesVisible, setExampleSentencesVisible] = useState(false);
    const [backgroundColor, setBackgroundColor] = useState('#f5f5f5'); // État initial vide


    

    const skills = [
      { name: 'CSS', x: '-5vw', y: '-8vw' },
      { name: 'Python', x: '5vw', y: '8vw' },
      { name: 'tailwindcss', x: '-14vw', y: '10vw' },
      { name: 'HTML', x: '12vw', y: '-10vw' },
      { name: 'NextJS', x: '17vw', y: '6vw' },
      { name: 'Javascript', x: '-16vw', y: '-6vw' },
      // Ajoutez d'autres compétences au besoin
    ];
    const projects = [
      {
        title: "Projet : C2 Montreal",
        src: "c2montreal.png",
        color: "#000000"
      },
      {
        title: "Projet : Office Studio",
        src: "officestudio.png",
        color: "#8C8C8C"
      },
      {
        title: "Locomotive",
        src: "locomotive.png",
        color: "#EFE8D3"
      },
      {
        title: "Silencio",
        src: "silencio.png",
        color: "#706D63"
      }
    ]


    
    type MessageObject = {
      subject: string;
      code : string;
      // Ajoutez d'autres propriétés si nécessaire
  };

  const handleExampleSelect = (sentence: string) => {
    setSelectedExample(sentence);
  };
  
  const handleSendFMessage = (message: MessageObject) => {
      console.log('Message reçu :', message.subject);
      console.log("code couleur : ", message.code )
      try {
          if (message.subject === 'skill') {
            setShowSkills(true)
            setShowExperience(false);
            setshowDescription(false);
            setshowProject(false)


          } else if (message.subject === 'education') {
              setShowExperience(true);
              setshowDescription(false);
              setShowSkills(false)
              setshowProject(false)

          } else if (message.subject === 'darkmode') {
            setBackgroundColor("")
            setMode(mode === "dark" ? "light" : "dark");
            console.log(mode)
            if (mode ==="dark"){
              document.documentElement.style.setProperty('--custom-gradient-color', "#f5f5f5");

            }  
             else{
              document.documentElement.style.setProperty('--custom-gradient-color', "#1B1B1B");
              
            }

          }
           else if (message.subject === 'project') {
            setshowProject(true)
            setShowExperience(false);
            setShowSkills(false)
            setshowDescription(false);
          

          }else if (message.subject === 'color') {
            setBackgroundColor(message.code);
            document.documentElement.style.setProperty('--custom-gradient-color', message.code);



          }
          else {
              setshowDescription(true);
              setShowExperience(false);
              setshowProject(false)
              setShowSkills(false)

          }
      } catch (error) {
          console.error('Erreur lors de la gestion du message :', error);
      }
  };

  
  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />

      </Head>
      <main style={{ backgroundColor }} className={` flex  ${mode} items-center text-dark dark:text-light w-full`}>
        <Layout  className='pt-10 '>
          <div className="flex items-center justify-between w-full">
            <div className='w-1/2 pl-32 p-10'>
              <Image src={FotoProfil} alt="Cybersecurite" className='h-full w-full'/>
              <HireMe /> {/* Afficher HireMe en fonction de showHireMe */}
            </div>
            
            <div className='w-1/2 flex flex-col item-center self-center'>
              <AnimatedText  className='!text-[3.5rem] leading-none capitalize !text-left pb-2' text="Transformez votre vision en réalité grâce au code."/>
              <p>
              Je suis Achraf, un développeur passionné. Fort de mes connaissances en deep learning, en sciences des données et en développement web,
              j'associe la puissance des modèles de Hugging Face à mon approche créative du développement front-end.
              Mes compétences en Python, ma maîtrise de Next.js, et ma solide compréhension des bases de données offrent une combinaison équilibrée entre créativité et technicité.
              Je vous invite à explorer mon univers professionnel pour découvrir mon travail et ma passion pour l'innovation              </p>
              <div className='flex items-center self-start mt-4'>
                <Link className='flex items-center bg-dark dark:bg-light text-light  dark:text-dark hover:bg-light   hover:dark:bg-dark hover:text-dark  hover:dark:text-light hover:dark:border-light p-2.5 px-6 rounded-lg text-lg font-semibold border hover:border-dark ' href="/about">Resume</Link>
                <Link className='ml-4 text-lg font-medium capitalize underline ' href="/about">Contact</Link>
              </div>
            </div>
          </div>
          <div className=' pt-52 h-screen w-full flex'>

            <div className='w-2/3 flex overflow-scroll flex-col'>
              
                <motion.div
                className=' w-4/5 h-full ml-10'
                initial={{ opacity: 0, scale: 0.8 }}
                animate={{
                opacity: showDescription || showExperience || showProject || showSkills ? 1 : 0,
                scale: showDescription || showExperience || showProject || showSkills ? 1 : 0.8,
                }}
                exit={{
                opacity: 0,
                scale: 0.8,
                }}
                transition={{
                duration: 0.9,
                ease: "easeOut",
                delay: 0,
                
                }}
                >
                  <Description show={showDescription} title='' />
                  <Skills show={showDescription}   onAnimationComplete={() => setExampleSentencesVisible(true)} // Appelé lorsque l'animation est terminée
                  paragraph="Bienvenue sur mon portfolio, où l'exploration de contenu prend une toute nouvelle dimension.
                  Mon site offre une expérience interactive exceptionnelle, vous permettant de dialoguer avec une IA conviviale pour découvrir mon contenu de manière personnalisée.
                  Commencez dès maintenant en lui posant vos questions sur mes compétences, mes projets et mon parcours académique,
                  et n'hésitez pas à personnaliser le site, y compris les couleurs, la photo de profil et le texte de description, selon vos préférences."
                  />
                  <Competences skills={skills} show={showSkills}/>
                  
                  <div>
                    <Experience show={showExperience}/>

                  </div>
                  <div className='w-[120%] -ml-10 grid gap-16'>
                    <AnimatedText show={showProject} className='text-8xl leading-none flex items-center justify-center capitalize !text-left pb-2' text="Project"/>
                  {projects.map((project, index) => (
                    <Project show={showProject} key={index} index={index} title={project.title} src={project.src} setModal={setModal} />
                  ))}
                  </div>

                  <motion.div
                  className=''
                  initial={{ opacity: 0, y: 20 }}
                  animate={{ opacity: showDescription ? 1 : 0, y: showDescription ? 0 : 20 }}
                  transition={{ duration: 0.5 }} // Personnalisez la durée d'animation ici
                  >
                    <ExampleSentences show={exampleSentencesVisible} onExampleSelect={handleExampleSelect} />
                  </motion.div>
                </motion.div>


                <Modal modal={modal} projects={projects} />
                <div className=''>
                </div>
            </div>
            <div className='w-[50%]  flex flex-col'>
                <Messenger onSendMessage={handleSendFMessage} selectedExample={selectedExample}/>
            </div>
          </div>
        </Layout>
        <div className=' absolute right-8 bottom-8 inline-block w-24'>
          <Image src={lightbuble} alt='' className='w-full h-auto'/>
        </div>
      </main>
    </>
  )
}


